FUNC 2

NOTE: LITTLE ENDIAN VALUES HAVE BEEN REVERSED.
      ACTUAL ORIENTATION IN MEMORY IS REVERSED.

84 36 // ENERGY TANK
83 C5 // MISSILES
83 C5 // SUPER MISSILES
83 C5 // POWER BOMBS
83 C5 // GRAPPLE BEAM
83 CC // X-RAY SCOPE
84 36 // VARIA SUIT
84 36 // SPRING BALL
84 36 // MORPHING BALL
84 36 // SCREW ATTACK
84 36 // HI-JUMP
84 36 // SPACE JUMP
83 CC // SPEED BOOSTER
84 36 // CHARGE BEAM
84 36 // ICE BEAM
84 36 // WAVE BEAM
84 36 // SPAZER
84 36 // PLASMA BEAM
83 C5 // BOMB
84 36 // MAP DATA ACCESS COMPLETE
84 36 // ENERGY RECHARGE COMPLETE
84 36 // MISSILE RELOAD COMPLETE
84 41 // WANNA SAVE?
84 36 // SAVE COMPLETED
84 36 // RESERVE TANK
84 36 // GRAVITY SUIT
84 36 // UNUSED
84 41 // UNUSED

POSSIBLE FUNCS:
84 36 - DEFAULT MESSAGE - USE THIS FOR MODDED ITEM TYPES
84 41 - INTERACTIVE (SAVE STATION ONLY)
83 C5 - MOST LONG DESCRIPTION ITEMS
83 CC - X-RAY SCOPE AND SPEED BOOSTER

858436:
REP #$30
LDA #$01C0
STA $34
JSR $831E
RTS

858441:
REP #$30
LDA #$01A0
STA $34
JSR $831E
RTS

// DISPLAY CUSTOM BUTTON TILE TO REFLECT PLAYER'S KEY MAPPINGS.

8583C5:
REP #$30
LDA $09B2 // CURRENTLY BOUND SHOOT BUTTON.
BRA $83D1 // BRANCH INSTEAD OF JUMP BECAUSE THIS IS FUNCTIONALLY JUST THE 8583CC FUNC BUT EARLIER TO GIVE DIFFERENT DATA INPUTS

8583CC:
REP #$30
LDA $09B6 // CURRENTLY BOUND RUN BUTTON
--LBL 83D1
LDY #$0000
BIT #$0080 A BUTTON
BNE END
LDY #$0002
BIT #$8000 B BUTTON
BNE END
BNE END
LDY #$0004
BIT #$0040 X BUTTON
BNE END
BNE END
LDY #$0006
BIT #$4000 Y BUTTON
BNE END
BNE END
LDY #$0008
BIT #$2000 SELECT
BNE END
BNE END
LDY #$000A
BIT #$0020 L
BNE END
BNE END
LDY #$000C
BIT #$0010 R
BNE END
LDY #$000E
LBL END
LDA $1C1F
DEC
ASL
TAX
LDA $8749, X
TAX
LDA $8426, Y
STA $7E3200, X
LDA #$01A0
STA $34
JSR $831E
RTS


COMPANION FUNCTIONS:
// $34 WILL BE EITHER 01A0 OR, FOR STANDARD BOXES, 01C0
85831E: ALL MESSAGE TYPES GET HERE EVENTUALLY.
// JUST A BUNCH OF WRITES TO $7E3380-$7E3386 AND $4360-$436A. NOTHING DYNAMIC. A = #$40, $420C = #$40
// IT DOES CONTAIN A SIGNIFICANT SUBROUTINE THOUGH - 85859B
JSR $8363 
JSR $8136 // WAIT FOR HBLANK
REP #$20
LDA $#5800
CLC
ADC $34 // 34 IS EITHER 01A0 OR 01C0, THE LATTER FOR BASIC BOXES.
STA $34 // INCREMEMNT $34 BY 5800.
STA $2116
// MISC BS.
LDA #$1801
STA $4310
LDA #$3200
STA $4312
LDA #$007E
STA $4314
//
LDA $09
STA $4315
STZ $4317
STZ $4319
SEP #$20
LDA #$80
STA $2115
LDA #$02
STA $420B
JSL $808F0C // SOMETHING UNIMPORTANT TO DO WITH TIMING I THINK?
JSL $8289EF // TIMING AND SOUND I BELIEVE?
RTS





SUBFUNC 858373:
INCLUDES JUMP TO 859B

SUBFUNC 85859B
PHP
JSR $8136 // WAIT FOR HBLANK
REP #$30
JSL $808F0C // SOMETHING ABOUT TIMING
JSL $8289EF // ITERATES OVER SOUNDS TO PLAY?????
LDA #$7B00
SEC
SBC $05A2 // $05A2 - HOW MUCH OF MESSAGE BOX IS OPEN
XBA
AND #$00FF
STA $05A8 // $05A8 - PURPOSE UNKNOWN, LIKELY SIGNIFICANT.
LDA #$0063
STA $05AA // $05AA - PURPOSE UNKNOWN, LIKELY SIGNIFICANT.
LDA #$7C00
CLC
ADC $05A2
XBA
AND #$00FF
STA $05A4 // FIRST BYTE - STILL PROCESSING CURRENT FRAME. SECOND BYTE - SOME KIND OF ANIMATION INDEX.
LDA #$0094
STA $05A6 // $05A6 - SOMETHING GRAPHICS/TILEMAP RELATED?
LDX #$00F6
LDY #$00F8
LDA #$001E
STA $14 // $14 = LOOP CCOUNTER. ON LOOP WHICH STARTS WITH $14 = 1, THAT WILL BE FINAL LOOP.

LBL LOOPHEAD1:
LDA $05AA
SEC
SBC $05A8
STA $7E3000, X
DEC $05AA
DEC $05A8
DEX
DEX
PHX
TYX
LDA $05A6
SEC
SBC $05A4
STA $7E3000, X
PLX
INC $05A6
INC $05A4
INY
INY
DEC $14
BNE LOOPHEAD1

TYX
LDA #$0000

LBL LOOPHEAD2:
STA $7E3000, X
INX
INX
CPX #$01E0
BMI LOOPHEAD2
PLP
RTS
// Note from the future: I'm pretty sure this was a very early version of New Routine Alpha.

// WRITING THE ROUTINES

// GET OFFSET INDEX FOR NEWLY ADDED ITEM.
// WRITTEN TO 029643 IN ROM FILE.
// WILL BE AT 859643 IN MEMORY MAP.
// WHERE ARE ITEM ARRAYS?
// IN RAM:
// FF90-FFAF PROCESSED ITEM ARRAY. USED DURING ROUTINE
// FFB0-FFCF LAST ITEM ARRAY
// FFDO-FFFF COPY OF CURRENT ITEM ARRAY
// FF8E-CALCULATED OFFSET

LDA $1C1F
AND #$FF00
CMP $#1400
BPL #$8F
// PUSH STUFF TO STACK
PHA
PHY
// COPY CURRENT ITEM ARRAY TO HERE.
LDX #$0020
LBL COPY ITEM ARRAY
LDA $D870, X
STA $7FFFCE, X
DEX
DEX
CPX #$0000
BNE COPY ITEM ARRAY

// CHECK IF THIS MEMORY CONTAINS HORSESHIT OR NOT.
LDA $7FFFD0
CLC
SBC $7FFFB0
// IF DATA IS NON-BUGGERED, DIFFERENCE BETWEEN THESE TWO VALUES SHOULD BE EITHER 0 OR 1.
CMP #$0000
BEQ SKIP DATA CLEAR
CMP #$0001
BEQ SKIP DATA CLEAR

// CLEAR DATA SINCE IT'S BUGGERED
LDX #$0020
LBL CLEAR DATA LOOP
STZ $7FFFAE, X
DEX
DEX
CPX #$0000
BNE CLEAR DATA LOOP



LBL SKIP DATA CLEAR

// MAKE EVERY BIT OTHER THAN THE NEW ITEM EQUAL TO ZERO.
// STORE RESULTANT TO PROCESSED ITEM ARRAY.
LDX #$0020
LBL ISOLATEBITLOOP
LDA $7FFFCE, X
CLC
SBC $7FFFAE, X
STA $7FFF8E, X 
DEX
DEX
CPX #$0000
BNE ISOLATEBITLOOP

// NOW LOOK FOR THE ONE THAT'S NOT EQUAL TO 0.
// FOR EACH THAT IS EQUAL TO 0, ADD 8 TO FINAL ADDRESS.
LDY #$0000 // THIS WILL BE HOLDING THE CALCULATED ADDRESS.
LDX #$0020
LBL GETITEMOFFSETLOOP
LDA $7FFF8E, X 
CPA #$0000
BNE FOUNDITEMBIT
// INCREMENT Y BY 16
TYA
CLC
ADC #$0010
TAY
DEX
DEX
BRA GETITEMOFFSETLOOP

// CALCULATE OFFSET BY BIT POSITION
// NOTE: POINTER TABLE STARTS WITH LSB (I.E. 00000001) AND ENDS AT MSB (I.E. 10000000) 
// CALCULATE THIS BY NUMBER OF TIMES WE HAVE TO SHIFT THE BIT FOR IT TO BE EQUAL TO 1.

LBL FOUNDITEMBIT

// UPDATE LAST ITEM ARRAY.
LDA $7FFFCE, X
STA $7FFFAE, X
LDA $7FFF8E, X
LBL FIND BIT OFFSET
CPA #$0001
BEQ FOUND BIT OFFSET
INY
LSR A
BRA FIND BIT OFFSET

// WE HAVE OUR OFFSET. IT'S IN Y.
LBL FOUND BIT OFFSET
TYA
ASL A // DOUBLE OUR OFFSET BECAUSE VALUES IN TABLES ARE TWO BYTES LONG.
STA $7FFF8E
TAX
PLY
PLA
RTS

SUFFIX:
CMP #$1900
BPL BACK UP TO START OF FUNC
// LOOK UP RIGHT VALUES IN THE MAGIC TABLE.



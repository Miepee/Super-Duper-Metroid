Anatomy of a tile:
BYTE 0: TILE INDEX
BIT 0-4: Column
BIT 5-7: Row

BYTE 1:
BIT 7: 
BIT 6: X Flip
BIT 5: UNKWN: ALWAYS SET?
BIT 4-2: PALETTE
BIT 1: 
BIT 0: 

Tilemap for: Missiles
First tile starts 6 bytes after Tilemap start
Rows are 26 tiles long, or 52 bytes.
No gap between tiles, but there's a gap of 12 bytes between each row.

How do we know where our tilemap is, you might ask?
We find the base address at $850000 (Mirror of RAM: $7E0000) and add Y to it.
EX:
BANK: 85
$7E0000 = BF
$7E0001 = 87
Y = 0006
LDA ($00), Y -> RESULTANT ADDRESS IS 85:87BF + 0006

Y will always start at 0 and increment up in steps of 2 bytes.

COPY MAIN MESSAGE MAP TO RAM (FOR LARGE):

...
...
...
LDX #$0040
LDY #$0000
LBL LOOPHEAD
LDA ($00)
STA $7E3200
INX
INX
INY
INY
DEC $16
BNE LOOPHEAD
RTS

MOVING LARGE MESSAGE BOX TO RAM IS HANDLED BY FUNCTION 85825A
ACTUAL MESSAGE BOX HANDLED IN SUBROUTINE - REST OF FUNCTION DRAWS TOP & BOTTOM
EASY ROOM FOR SPACE OPTIMIZATION - COULD INSERT A FEW ADDITIONAL INSTRUCTIONS WITHOUT DISRUPTING ADDRESSING SPACE

HOW WOULD WE MODIFY TO MAKE USE OF CUSTOM USER HEADLINE????

INDIRECT-DIRECT ADDRESSING TO FREE SPACE WITH INSERTED POINTER TABLE SUGGESTS ITSELF.

TO ENSURE NAME IS CENTERED AT TOP & BOTTOM REGARDLESS OF LENGTH, USE THE FOLLOWING PREFIXES.
IF NAME IS EVEN: FOR (NAME)
IF NAME IS ODD: TO (NAME)

THIS MEANS MAXIMUM NAME LENGTH IS 22 TILES IN LENGTH.
2BPP TILEMAP FOR MESSAGE BOXES IS AT 9AB200

//PICKING UP ALPHA MISSILES.

//REGISTER VALUES:
//A: 89A9
//X: 004E
//Y: E4A6
//S: 1FF2
//D: 0000
//DB:  84
//P:   80

//FLAGS: N
//MAIN FUNCTION 8489A9
//THIS PART UPDATES YOUR CURRENT AND MAXIMUM MISSILES

LDA $09C8 // A = 00 00
CLC
ADC $0000, Y // A += 00 05; A = 5
STA $09C8
LDA $09C6 // A = 00 00
CLC
ADC $0000, Y // A += 00 05; A = 5
STA $09C6
####################################################//TBD
JSL $8099CF // SET UP ICON AT TOP OF SCREEN FOR MISSILES.
LDA #$0168
JSL $82E118 // PLAY PICKUP TRACK.
LDA #$0002
JSL $858080 // SHOW MESSAGE BOX
INY
INY
RTS

//FUNCTION 8099CF: ADD MISSILES TO HUD WRAM TILEMAP
# PUSH REGISTERS P, DB, AND PB TO THE REGISTER
PHP
PHB
PHK
// PULL TOP OF STACK (OUR PB REGISTER) TO THE DATA BANK
PLB
// SET A, X, AND Y REGISTER SIZES TO 16-BIT
REP #$30
//
LDA $7EC61C // A = 2C0F
AND #$03FF // A & 03FF = 000F (TRIM FIRST 6 BITS)
CMP #$000F // A == 000F? -> TRUE. SET Z AND C
BNE $9A0B // GO TO END OF ROUTINE IF CMP WAS FALSE.
LDA $99A3 // A = 344B
STA $7EC61C 
LDA $99A5 // A = 3449
STA $7EC61E 
LDA $99A7 // A = 744B
STA $7EC620
LDA $99A9 // A = 344C
STA $7EC65C
LDA $99AB // A = 344A
STA $7EC65E
LDA $99AD // A = 744C
STA $7EC660
// RESTORE STACK THEN RETURN (OMITTED)

FUNCTION 82E118: PLAY PICKUP SONG
// PUT P AND B ON THE STACK
PHP
PHB
REP #$30 // SET ALL REGISTERS TO 16 BITS.
PHY // PUSH Y TO STACK.
TAY // A -> Y
LDA $0998 // A = 0008
CMP #$0028
BCS $E134 // END ROUTINE IF A >= 0028. FALSE
LDA #$0000
JSL $808FF7
LDA $075F
JSL $808FC1
PLY
PLB
PLP
RTL

FUNCTION 858080: DISPLAY MESSAGE BOX
// PUT SHIT ON STACK, PUT PROGRAM BANK INTO DATA BANK
PHP
PHB
PHX
PHY
PHK
PLB

STA $1C1F // STORE CURRENT MESSAGE BOX TYPE AS 2
JSL $82BE17
JSR $8143
JSR $81F3
JSR $8241 // USES BOX TYPE
JSR $8574
JSR $844C
LDA $1C1F
CMP #$001C
BEQ $80BF
JSR $846D
JSR $8589
JSR $81F3
JSR $861A
JSL $82BE2F
JSR $8574
JSR $80FA
PLY
PLX
PLB
PLP
RTL